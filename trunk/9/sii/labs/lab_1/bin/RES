



Область:
лабораторная работа 1



Автор: 
eav, epa, 3351



Текст начала: 
Выбор языка для разработки программ


Применение всех правил в процессе вывода.     
ПР-ЛА:



----------------------------------------




ПРАВИЛО:     1   

IF:
       Generic Static typing


THEN:
       Java - Вероятность=9/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     2   

IF:
       Generic Garbage Collection


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     3   

IF:
       Generic Aliases


THEN:
       Java - Вероятность=3/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     4   

IF:
       Value types Typed Enumeration/Boolean


THEN:
       Java - Вероятность=9/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     5   

IF:
       Value types Long double floating point (80bit)


THEN:
       C++ - Вероятность=9/10
   и   C# - Вероятность=6/10


----------------------------------------




ПРАВИЛО:     6   

IF:
       Value types Complex and Imaginary


THEN:
       Python - Вероятность=9/10
   и   Ruby - Вероятность=6/10


----------------------------------------




ПРАВИЛО:     7   

IF:
       Value types Rational


THEN:
       Java - Вероятность=6/10
   и   Ruby - Вероятность=6/10


----------------------------------------




ПРАВИЛО:     8   

IF:
       Value types Arbitrary Precision Arithmetic


THEN:
       Java - Вероятность=7/10


----------------------------------------




ПРАВИЛО:     9   

IF:
       Value types Regular Expression


THEN:
       Java - Вероятность=7/10
   и   C++ - Вероятность=6/10
   и   C# - Вероятность=6/10
   и   Python - Вероятность=6/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     10  

IF:
       Arrays Lightweight array


THEN:
       C++ - Вероятность=9/10
   и   Python - Вероятность=6/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     11  

IF:
       Arrays Array bounds checking


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     12  

IF:
       Arrays Array slicing


THEN:
       Java - Вероятность=7/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     13  

IF:
       Arrays Array of bits / Finite set


THEN:
       Java - Вероятность=7/10
   и   C++ - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     14  

IF:
       Other Data Models List


THEN:
       Java - Вероятность=6/10
   и   C++ - Вероятность=6/10
   и   C# - Вероятность=6/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     15  

IF:
       Other Data Models Hash


THEN:
       Java - Вероятность=6/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     16  

IF:
       Other Data Models Abstract collection


THEN:
       Java - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     17  

IF:
       Functions Function delegates


THEN:
       C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     18  

IF:
       Functions Function overloading


THEN:
       Java - Вероятность=9/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     19  

IF:
       Functions Out function parameters


THEN:
       C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     20  

IF:
       Functions Nested functions


THEN:
       Java - Вероятность=5/10
   и   Python - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     21  

IF:
       Functions Function literals


THEN:
       Java - Вероятность=5/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     22  

IF:
       Functions Dynamic closures


THEN:
       Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     23  

IF:
       Functions Lexical closures


THEN:
       Java - Вероятность=5/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     24  

IF:
       Functions Non-class functions


THEN:
       C++ - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     25  

IF:
       OOP Modules/Namespaces


THEN:
       Java - Вероятность=9/10
   и   C++ - Вероятность=7/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=6/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     26  

IF:
       OOP Multiple Inheritance


THEN:
       Java - Вероятность=4/10
   и   C++ - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=3/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     27  

IF:
       OOP Interfaces


THEN:
       Java - Вероятность=4/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     28  

IF:
       OOP Fine grain export control


THEN:
       Java - Вероятность=7/10
   и   C++ - Вероятность=7/10
   и   C# - Вероятность=7/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     29  

IF:
       OOP Inner classes


THEN:
       Java - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     30  

IF:
       OOP Operator overloading


THEN:
       C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     31  

IF:
       OOP Covariant return types


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     32  

IF:
       OOP Generics


THEN:
       Java - Вероятность=6/10
   и   C++ - Вероятность=9/10
   и   C# - Вероятность=6/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     33  

IF:
       Multilevel programming Templates or executable macros


THEN:
       C# - Вероятность=8/10
   и   Python - Вероятность=8/10


----------------------------------------




ПРАВИЛО:     34  

IF:
       Multilevel programming Reflection/Introspection


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=8/10
   и   Ruby - Вероятность=8/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     35  

IF:
       Multilevel programming Dynamic inheritance change


THEN:
       Java - Вероятность=3/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     36  

IF:
       Multilevel programming Dynamic class creation


THEN:
       Java - Вероятность=8/10
   и   C# - Вероятность=8/10


----------------------------------------




ПРАВИЛО:     37  

IF:
       Multilevel programming Dynamic method creation


THEN:
       Java - Вероятность=8/10
   и   C# - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     38  

IF:
       Multilevel programming Dynamic class loading


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     39  

IF:
       Multilevel programming Dynamic class unloading


THEN:
       Java - Вероятность=9/10
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ ╔


----------------------------------------




ПРАВИЛО:     40  

IF:
       Performance Inline assembler


THEN:
       C++ - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     41  

IF:
       Performance Explicit memory allocation control


THEN:
       Java - Вероятность=6/10
   и   C++ - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     42  

IF:
       Performance Implicit Parallelism/Scheduling


THEN:
       Java - Вероятность=8/10
   и   C++ - Вероятность=3/10
   и   C# - Вероятность=3/10
   и   Python - Вероятность=3/10
   и   Ruby - Вероятность=3/10


----------------------------------------




ПРАВИЛО:     43  

IF:
       Reliability Design by Contract


THEN:
       Java - Вероятность=8/10
   и   Multilevel programming Dynamic class loading
   и   [PROJECT_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ [PROJECT_TIME_RATIO] * 1.1
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ [CODING_TIME_RATIO] * 0.9


----------------------------------------




ПРАВИЛО:     44  

IF:
       Reliability Static construction order


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=8/10


----------------------------------------




ПРАВИЛО:     45  

IF:
       Reliability Guaranteed initialization


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ [CODING_TIME_RATIO] * 0.9


----------------------------------------




ПРАВИЛО:     46  

IF:
       Reliability RAII


THEN:
       C++ - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     47  

IF:
       Reliability try-catch-finally blocks


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10


----------------------------------------




ПРАВИЛО:     48  

IF:
       Reliability Thread synchronization primitives


THEN:
       Java - Вероятность=9/10
   и   C# - Вероятность=9/10
   и   Python - Вероятность=9/10
   и   Ruby - Вероятность=9/10
   и   [CODING_TIME_RATIO] ПРИСВОЕНО ЗНАЧЕНИЕ [CODING_TIME_RATIO] * 0.9

ПОКАЗАТЕЛИ:




1  Generic

Static typing
Garbage Collection
Aliases


        Примен. правило:      1       2       3  





2  Value types

Typed Enumeration/Boolean
Long double floating point (80bit)
Complex and Imaginary
Rational
Arbitrary Precision Arithmetic
Regular Expression


        Примен. правило:      4       5       6       7       8       9  
                         





3  Arrays

Lightweight array
Array bounds checking
Array slicing
Array of bits / Finite set


        Примен. правило:     10      11      12      13  





4  Other Data Models

List
Hash
Abstract collection


        Примен. правило:     14      15      16  





5  Functions

Function delegates
Function overloading
Out function parameters
Nested functions
Function literals
Dynamic closures
Lexical closures
Non-class functions


        Примен. правило:     17      18      19      20      21      22  
                             23      24  





6  OOP

Modules/Namespaces
Multiple Inheritance
Interfaces
Fine grain export control
Inner classes
Operator overloading
Covariant return types
Generics


        Примен. правило:     25      26      27      28      29      30  
                             31      32  





7  Multilevel programming

Templates or executable macros
Reflection/Introspection
Dynamic inheritance change
Dynamic class creation
Dynamic method creation
Dynamic class loading
Dynamic class unloading


        Примен. правило:     33      34      35      36      37      38  
                             39   (  43) 





8  Performance

Inline assembler
Explicit memory allocation control
Implicit Parallelism/Scheduling


        Примен. правило:     40      41      42  





9  Reliability

Design by Contract
Static construction order
Guaranteed initialization
RAII
try-catch-finally blocks
Thread synchronization primitives


        Примен. правило:     43      44      45      46      47      48  
                         



РЕШЕНИЯ:

1  Java


        Примен. правило:  (   1)  (   2)  (   3)  (   4)  (   7)  (   8) 
                          (   9)  (  11)  (  12)  (  13)  (  14)  (  15) 
                          (  16)  (  18)  (  20)  (  21)  (  23)  (  25) 
                          (  26)  (  27)  (  28)  (  29)  (  31)  (  32) 
                          (  34)  (  35)  (  36)  (  37)  (  38)  (  39) 
                          (  41)  (  42)  (  43)  (  44)  (  45)  (  47) 
                          (  48) 




2  C++


        Примен. правило:  (   1)  (   3)  (   4)  (   5)  (   9)  (  10) 
                          (  13)  (  14)  (  18)  (  19)  (  24)  (  25) 
                          (  26)  (  27)  (  28)  (  30)  (  32)  (  40) 
                          (  41)  (  42)  (  46) 




3  C#


        Примен. правило:  (   1)  (   2)  (   3)  (   4)  (   5)  (   9) 
                          (  11)  (  14)  (  15)  (  17)  (  18)  (  19) 
                          (  21)  (  23)  (  25)  (  27)  (  28)  (  30) 
                          (  31)  (  32)  (  33)  (  34)  (  36)  (  37) 
                          (  38)  (  42)  (  44)  (  45)  (  46)  (  47) 
                          (  48) 




4  Python


        Примен. правило:  (   2)  (   3)  (   6)  (   9)  (  10)  (  11) 
                          (  12)  (  14)  (  15)  (  17)  (  20)  (  21) 
                          (  22)  (  23)  (  24)  (  25)  (  26)  (  27) 
                          (  30)  (  31)  (  32)  (  33)  (  34)  (  38) 
                          (  42)  (  45)  (  46)  (  47)  (  48) 




5  Ruby


        Примен. правило:  (   2)  (   3)  (   6)  (   7)  (   9)  (  11) 
                          (  12)  (  14)  (  15)  (  17)  (  21)  (  22) 
                          (  23)  (  24)  (  25)  (  26)  (  29)  (  30) 
                          (  32)  (  34)  (  38)  (  41)  (  42)  (  47) 
                          (  48) 





ФОРМУЛЫ: 

1   ╔


        Примен. правило:  (   1) 




2   ╔


        Примен. правило:  (   2) 




3   ╔


        Примен. правило:  (   3) 




4   ╔


        Примен. правило:  (  10) 




5   ╔


        Примен. правило:  (  11) 




6   ╔


        Примен. правило:  (  13) 




7   ╔


        Примен. правило:  (  14) 




8   ╔


        Примен. правило:  (  15) 




9   ╔


        Примен. правило:  (  16) 




10   ╔


        Примен. правило:  (  17) 




11   ╔


        Примен. правило:  (  18) 




12   ╔


        Примен. правило:  (  19) 




13   ╔


        Примен. правило:  (  19) 




14   ╔


        Примен. правило:  (  23) 




15   ╔


        Примен. правило:  (  24) 




16   ╔


        Примен. правило:  (  25) 




17   ╔


        Примен. правило:  (  25) 




18   ╔


        Примен. правило:  (  26) 




19   ╔


        Примен. правило:  (  26) 




20   ╔


        Примен. правило:  (  27) 




21   ╔


        Примен. правило:  (  27) 




22   ╔


        Примен. правило:  (  28) 




23   ╔


        Примен. правило:  (  29) 




24   ╔


        Примен. правило:  (  30) 




25   ╔


        Примен. правило:  (  30) 




26   ╔


        Примен. правило:  (  34) 




27   ╔


        Примен. правило:  (  34) 




28   ╔


        Примен. правило:  (  35) 




29   ╔


        Примен. правило:  (  38) 




30   ╔


        Примен. правило:  (  39) 




31   [PROJECT_TIME_RATIO] * 1.1


        Примен. правило:  (  43) 




32   [CODING_TIME_RATIO] * 0.9


        Примен. правило:  (  43) 




33   [CODING_TIME_RATIO] * 0.9


        Примен. правило:  (  45) 




34   [CODING_TIME_RATIO] * 0.9


        Примен. правило:  (  48) 





ПЕРЕМЕННЫЕ

1   PROJECT_TIME_RATIO
как изменится время проектирования
Числ. переменная
Отображено в конце выполнения 
Инициализ. для 1.000000

        Примен. правило:  (   1)* (  13)* (  14)* (  15)* (  16)* (  17)*
                          (  18)* (  19)* (  23)* (  25)* (  26)* (  27)*
                          (  28)* (  30)* (  34)* (  35)* (  38)* (  39)*
                          (  43)* (  43) 




2   CODING_TIME_RATIO
как изменится время программирования
Числ. переменная
Отображено в конце выполнения 
Инициализ. для 1.000000

        Примен. правило:  (   2)* (   3)* (  10)* (  11)* (  19)* (  24)*
                          (  25)* (  26)* (  27)* (  29)* (  30)* (  34)*
                          (  43)* (  43)  (  45)* (  45)  (  48)* (  48) 
                         




