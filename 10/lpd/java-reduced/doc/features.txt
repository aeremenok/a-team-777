1) типы
1. встроенные
	   boolean
	   int
	   float
	   void
	   String (наследуют Object)
	   Vector (наследуют Object)
2. пользовательские  (наследуют Object)
3. эквивалентность типов - именная (2 одинаково устроенных типа - не равны)
4. отсутствуют массивы

2) операции
1. !
2. бинарные 
        ||
        &&
        +
        -
        *
        /
        %
3. для группировки операции необходимо использовать ()

3) отношения (еще не реализовано)
      ("==")
    | ("!=")
    | ("<")
    | (">")
    | ("<=")
    | (">=")

4) Пользовательские типы
1. классы
    1.1. м.б. 1 класс-предок (нельзя наследовать самого себя)
    1.2. м. реализовать 1 интерфейс  (нельзя реализовать самого себя)
    1.3. (еще не реализовано) должен реализовать все методы, описанные в иерархии интерфейсов
    1.4. может перегрузить методы класса-предка
    1.5. (еще не реализовано) запретим перегружать поля предка
    1.6. (еще не реализовано) запрещено наследовать классы String и Vector

2. интерфейсы
    2.1. м.б. 1 интерфейс-предок (нельзя наследовать самого себя)
    2.2. не может иметь полей

3. недопустимо описывать классы, интерфейсы, члены - дважды
4. не поддерживаются члены, общие для всех экземпляров (static)
5. спецификаторы доступа - public либо default(пусто)

5) методы
1. параметры
    1.1. формальные: тип имя
    1.2. фактические: имя
    1.3. передача параметров - по указателю

2. могут возвращать значения типов 1)

3. тело
    3.1. обращения к членам класса - только к 1 за инструкцию 
        A.b(); - правильно
        A.b().c - неправильно
    3.2. допустимы обращения к членам класса-предка 
            super.a();
         квалифицированные и прямые обращения к собственным членам
            a();
            this.a();
    3.3. допустимы объявления и инициализация переменных, присвоение им значений, вычисление выражений
    3.4. выражение - это выполнение операции, бинарного отношения, обращение к члену своего класса, предка или экземпляра объектного типа, создание нового экземпляра класса

4. предопределенные конструкции
4.1. System.out.print(arg), System.out.println(arg)
4.2. запуск программы начинается из метода public void main(){...}