<?xml version="1.0" encoding="UTF-8"?>
<bpws:process exitOnStandardFault="yes" name="bookGetting"
    suppressJoinFailure="yes" targetNamespace="lib"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:ns="libArtifacts" xmlns:ns0="http://www.example.org/irbis/" xmlns:tns="lib">
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/"
        location="bookGetting.wsdl" namespace="lib"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/"
        location="../../../library/WebContent/wsdl/irbisSOAP.wsdl" namespace="http://www.example.org/irbis/"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/"
        location="../../../library/WebContent/wsdl/librarianSOAP.wsdl" namespace="http://www.example.org/librarian/"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" namespace="libArtifacts"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/"
        location="bookGettingArtifacts.wsdl" namespace="libArtifacts"/>
    <bpws:partnerLinks>
        <bpws:partnerLink myRole="bookGettingProvider" name="client" partnerLinkType="tns:bookGetting"/>
        <bpws:partnerLink name="irbis_ws" partnerLinkType="ns:irbis_ws" partnerRole="cipherProvider"/>
        <bpws:partnerLink name="librarian_ws" partnerLinkType="tns:bookGetting"/>
    </bpws:partnerLinks>
    <bpws:variables>
        <bpws:variable messageType="tns:bookGettingRequestMessage" name="input"/>
        <bpws:variable messageType="tns:bookGettingResponseMessage" name="output"/>
        <bpws:variable messageType="ns0:getCipherByNameResponse" name="irbis_wsResponse"/>
        <bpws:variable messageType="ns0:getCipherByNameRequest" name="irbis_wsRequest"/>
    </bpws:variables>
    <bpws:sequence name="getting book">
        <bpws:receive createInstance="yes" name="receiveInput"
            operation="process" partnerLink="client"
            portType="tns:bookGetting" variable="input"/>
        <bpws:if name="wantGetCipher">
            <bpws:sequence name="getting cipher">
                <bpws:invoke inputVariable="irbis_wsRequest"
                    name="cipher request" operation="getCipherByName"
                    outputVariable="irbis_wsResponse"
                    partnerLink="irbis_ws" portType="ns0:irbis"/>
                <bpws:if name="isFound">
                    <bpws:assign name="Assign" validate="yes">
                        <bpws:copy>
                            <bpws:from>
                                <bpws:literal>"failure"</bpws:literal>
                            </bpws:from>
                            <bpws:to part="payload" variable="output">
                                <bpws:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[/tns:result]]></bpws:query>
                            </bpws:to>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:condition><![CDATA[$irbis_wsResponse==""]]></bpws:condition>
                    <bpws:elseif>
                        <bpws:condition><![CDATA[$irbis_wsResponse!=""]]></bpws:condition>
                        <bpws:assign name="Assign1" validate="yes">
                            <bpws:copy>
                                <bpws:from part="parameters" variable="irbis_wsResponse">
                                    <bpws:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[/out]]></bpws:query>
                                </bpws:from>
                                <bpws:to part="payload" variable="output">
                                    <bpws:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[/tns:result]]></bpws:query>
                                </bpws:to>
                            </bpws:copy>
                        </bpws:assign>
                    </bpws:elseif>
                </bpws:if>
                <bpws:reply name="Reply" operation="process"
                    partnerLink="client" portType="tns:bookGetting" variable="output"/>
            </bpws:sequence>
            <bpws:condition><![CDATA[starts-with($input.payload/tns:input, "true")]]></bpws:condition>
            <bpws:elseif>
                <bpws:condition><![CDATA[starts-with($input.payload/tns:input, "false")]]></bpws:condition>
                <bpws:sequence name="getting book">
                    <bpws:invoke name="book request"/>
                </bpws:sequence>
            </bpws:elseif>
        </bpws:if>
    </bpws:sequence>
</bpws:process>
