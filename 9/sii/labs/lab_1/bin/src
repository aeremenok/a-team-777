SUBJECT: лабораторная работа 1 

AUTHOR: eav, epa, 3351

STARTING TEXT: Выбор языка для разработки программ

DISPLAY THRESHOLD: 0

/* уверенность 0-10
PROBABILITY SYSTEM: 2

DISPLAY RULES: YES

/* просматриваем недублированные варианты
DERIVATION:N

CHOICES:     /* языки программирования
    C> Java
    C> C++
    C> C#
    C> Python
    C> Ruby

QUALIFIERS:
Q> Generic
    V> Static typing
    V> Garbage Collection
    V> Aliases

Q> Value types
    V> Typed Enumeration/Boolean
    V> Long double floating point (80bit)
    V> Complex and Imaginary
    V> Rational
    V> Arbitrary Precision Arithmetic
    V> Regular Expression

Q> Arrays
    V> Lightweight array 
    V> Array bounds checking
    V> Array slicing
    V> Array of bits / Finite set

Q> Other Data Models
    V> List
    V> Hash 
    V> Abstract collection

Q> Functions
    V> Function delegates
    V> Function overloading
    V> Out function parameters
    V> Nested functions
    V> Function literals
    V> Dynamic closures
    V> Lexical closures
    V> Non-class functions

Q> OOP
    V> Modules/Namespaces
    V> Multiple Inheritance
    V> Interfaces
    V> Fine grain export control
    V> Inner classes 
    V> Operator overloading
    V> Covariant return types
    V> Generics

Q> Multilevel programming
    V> Templates or executable macros
    V> Reflection/Introspection
    V> Dynamic inheritance change
    V> Dynamic class creation
    V> Dynamic method creation
    V> Dynamic class loading
    V> Dynamic class unloading

Q> Performance
    V> Inline assembler
    V> Explicit memory allocation control
    V> Implicit Parallelism/Scheduling
    
Q> Reliability
    V> Design by Contract
    V> Static construction order
    V> Guaranteed initialization
    V> RAII
    V> try-catch-finally blocks
    V> Thread synchronization primitives

VARIABLES:

    [PROJECT_TIME_RATIO] как изменится время проектирования
    TYPE = N
    INITIALIZE = 1
    DISPLAY AT END

    [CODING_TIME_RATIO] как изменится время программирования
    TYPE = N
    INITIALIZE = 1
    DISPLAY AT END

/* правила
RULE:
    IF: 
    Generic {Static typing}
    THEN: 
         >Java: Probability = 9
    AND: >C++: Probability = 9
    AND: >C#: Probability = 9
    AND: [CODING_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9
/*    ELSE:
RULE:    
    IF:
    Generic {Garbage Collection}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.99
    ELSE:
    
    IF:
    Generic {Aliases}
    THEN:
         >Java: Probability = 3
    AND: >C++: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9
    
RULE: типы значений
    IF: 
    Value types {Typed Enumeration/Boolean}
    THEN: 
         >Java: Probability = 9
    AND: >C++: Probability = 9
    AND: >C#: Probability = 9
    ELSE:
    
    IF:
    Value types {Long double floating point (80bit)}
    THEN:
         >C++: Probability = 9
    AND: >C#: Probability = 6
    ELSE:
    
    IF:
    Value types {Complex and Imaginary}
    THEN:
         >Python: Probability = 9
    AND: >Ruby: Probability = 6    
    ELSE:
    
    IF:
    Value types {Rational}
    THEN:
         >Java: Probability = 6
    AND: >Ruby: Probability = 6        
    ELSE:
    
    IF:
    Value types {Arbitrary Precision Arithmetic}
    THEN:
         >Java: Probability = 7
    ELSE:
    
    IF:
    Value types {Regular Expression}
    THEN:
         >Java: Probability = 7
    AND: >C++: Probability = 6        
    AND: >C#: Probability = 6        
    AND: >Python: Probability = 6
    AND: >Ruby: Probability = 9    

RULE: массивы
    IF: 
    Arrays {Lightweight array}
    THEN: 
         >C++: Probability = 9
    AND: >Python: Probability = 6

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 1.1

    ELSE:

    IF: 
    Arrays {Array bounds checking}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Arrays {Array slicing}
    THEN: 
         >Java: Probability = 7
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9
    ELSE:

    IF: 
    Arrays {Array of bits / Finite set}
    THEN: 
         >Java: Probability = 7
    AND: >C++: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

RULE: особые модели данных
    IF: 
    Other Data Models {List}
    THEN: 
         >Java: Probability = 6
    AND: >C++: Probability = 6
    AND: >C#: Probability = 6
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Other Data Models {Hash}
    THEN: 
         >Java: Probability = 6
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Other Data Models {Abstract collection}
    THEN: 
         >Java: Probability = 9
    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9


RULE: работа с функциями
    IF: 
    Functions {Function delegates}
    THEN: 
         >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.85

    ELSE:

    IF: 
    Functions {Function overloading}
    THEN: 
         >Java: Probability = 9
    AND: >C++: Probability = 9
    AND: >C#: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.85

    ELSE:    

    IF: 
    Functions {Out function parameters}
    THEN: 
         >C++: Probability = 9
    AND: >C#: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 1.1

    ELSE:

    IF: 
    Functions {Nested functions}
    THEN: 
         >Java: Probability = 5
    AND: >Python: Probability = 9
    ELSE:

    IF: 
    Functions {Function literals}
    THEN: 
         >Java: Probability = 5
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9
    ELSE:

    IF: 
    Functions {Dynamic closures}
    THEN: 
         >Python: Probability = 9
    AND: >Ruby: Probability = 9
    ELSE:
    
    IF: 
    Functions {Lexical closures}
    THEN: 
         >Java: Probability = 5
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Functions {Non-class functions}
    THEN: 
         >C++: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

RULE: ООП!
    IF: 
    OOP {Modules/Namespaces}
    THEN: 
         >Java: Probability = 9
    AND: >C++: Probability = 7
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 6

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.8
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.95

    ELSE:

    IF: 
    OOP {Multiple Inheritance}
    THEN: 
         >Java: Probability = 4
    AND: >C++: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 3

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.8
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 1.1

    ELSE:    
    
    IF: 
    OOP {Interfaces}
    THEN: 
         >Java: Probability = 4
    AND: >C++: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.8
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.8

    ELSE:

    IF: 
    OOP {Fine grain export control}
    THEN: 
         >Java: Probability = 7
    AND: >C++: Probability = 7
    AND: >C#: Probability = 7

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    OOP {Inner classes}
    THEN: 
         >Java: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    OOP {Operator overloading}
    THEN: 
         >C++: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 1.1
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    OOP {Covariant return types}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    ELSE:

    IF: 
    OOP {Generics}
    THEN: 
         >Java: Probability = 6
    AND: >C++: Probability = 9
    AND: >C#: Probability = 6
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

RULE: многоуровневое программирование
    IF: 
    Multilevel programming {Templates or executable macros}
    THEN: 
         >C#: Probability = 8
    AND: >Python: Probability = 8
    ELSE:

    IF: 
    Multilevel programming {Reflection/Introspection}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 8
    AND: >Ruby: Probability = 8

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Multilevel programming {Dynamic inheritance change}
    THEN: 
         >Java: Probability = 3

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.8

    ELSE:

    IF: 
    Multilevel programming {Dynamic class creation}
    THEN: 
         >Java: Probability = 8
    AND: >C#: Probability = 8
    ELSE:

    IF: 
    Multilevel programming {Dynamic method creation}
    THEN: 
         >Java: Probability = 8
    AND: >C#: Probability = 9
    ELSE:

    IF: 
    Multilevel programming {Dynamic class loading}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Multilevel programming {Dynamic class unloading}
    THEN: 
         >Java: Probability = 9

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 0.9


RULE: производительность
    IF: 
    Performance {Inline assembler}
    THEN: 
         >C++: Probability = 9
    ELSE:

    IF: 
    Performance {Explicit memory allocation control}
    THEN: 
         >Java: Probability = 6
    AND: >C++: Probability = 9
    AND: >Ruby: Probability = 9
    ELSE:

    IF: 
    Performance {Implicit Parallelism/Scheduling}
    THEN: 
         >Java: Probability = 8
    AND: >C++: Probability = 3
    AND: >C#: Probability = 3
    AND: >Python: Probability = 3
    AND: >Ruby: Probability = 3

RULE: надежность
    IF: 
    Reliability {Design by Contract}
    THEN: 
         >Java: Probability = 8
    AND: Multilevel programming {Dynamic class loading}

    AND: [PROJECT_TIME_RATIO] := [PROJECT_TIME_RATIO] * 1.1
    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Reliability {Static construction order}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 8
    ELSE:

    IF: 
    Reliability {Guaranteed initialization}
    THEN: 
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    ELSE:

    IF: 
    Reliability {RAII}
    THEN: 
         >C++: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    ELSE:

    IF: 
    Reliability {try-catch-finally blocks}
    THEN:
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9
    ELSE:

    IF: 
    Reliability {Thread synchronization primitives}
    THEN:
         >Java: Probability = 9
    AND: >C#: Probability = 9
    AND: >Python: Probability = 9
    AND: >Ruby: Probability = 9

    AND: [CODING_TIME_RATIO] := [CODING_TIME_RATIO] * 0.9

    
ENDING TEXT: спасибо за внимание
